{"version":3,"file":"src_app_pages_university_university_module_ts.js","mappings":"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","sources":["./src/app/pages/university/university-create/university-create.component.ts","./src/app/pages/university/university-create/university-create.component.html","./src/app/pages/university/university-list/university-list.component.ts","./src/app/pages/university/university-list/university-list.component.html","./src/app/pages/university/university-routing.module.ts","./src/app/pages/university/university.model.ts","./src/app/pages/university/university.module.ts","./src/app/pages/university/university.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport Swal from 'sweetalert2';\nimport { University } from '../university.model';\nimport { UniversityService } from '../university.service';\n\n@Component({\n  selector: 'app-university-create',\n  templateUrl: './university-create.component.html',\n  styleUrls: ['./university-create.component.scss']\n})\nexport class UniversityCreateComponent implements OnInit {\n\n  universityData :University  [];\n\n  universitys : University[];\n\n\n\n  editMode :boolean =false;  //? write editMode to check if we are in edit mode or Add mode\n  isAddMode : boolean;        //?  write AddMode to check if we are in edit mode or Add mode\n  UniversityId :number;\n\n  IsAdmin !:boolean;\n  IsInterviewer !:boolean;\n  IsUser !:boolean;\n  LoggedIn :boolean = false;\n\n   @Input() universityInput : University = new University();\n   @Output() universityUpdated= new EventEmitter <University[]>();\n\n   @Input() fromDate: Date;\n   @Input() toDate: Date;\n   @Output() dateRangeSelected: EventEmitter<{}> = new EventEmitter();\n   @ViewChild('dp', { static: true }) datePicker: any;\n   constructor(private http :HttpClient,\n     private universityServices : UniversityService ,\n     private route:ActivatedRoute,\n     ) { }\n\n  ngOnInit(): void {\n    const role :any =localStorage.getItem('roles');\n    if(role == \"Admin\"){\n       this.IsAdmin =true;\n       this.IsInterviewer=false;\n       this.IsUser=false;\n       this.LoggedIn=true;\n    }else if (role==\"Interviewer\"){\n      this.IsInterviewer= true;\n      this.IsAdmin = false;\n      this.IsUser=false;\n      this.LoggedIn=true;\n    }\n    else if(role == \"Trainee\"){\n      this.IsUser=true;\n      this.IsInterviewer=false;\n      this.IsAdmin=false;\n      this.LoggedIn=true;\n    }\n\n    ///////////////////////////////\n    this.route.paramMap.subscribe((params)=>{\n      const id =+params.get(\"id\");\n      this.UniversityId=id;\n      this.isAddMode =! id;\n      if(id)\n    {\n      this.universityServices.getUniversityById(id).subscribe((result)=>{\n\n        debugger\n        this.universityInput.universityName=result.universityName;\n\n        console.log(result);\n      }\n    );\n    }\n    });\n    this._GetAllUniversityData();\n  }\n\n  formatDate(date) {\n    var d = new Date(date),\n      day = \"\" + d.getDate(),\n      month = \"\" + (d.getMonth() + 1),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [year, month, day].join(\"-\");\n  }\n\n  onSubmit(form:NgForm){\n    if(this.isAddMode){\n      const headers = new HttpHeaders({\n        Authorization :`Bearer ${localStorage.getItem('jwt')}`,\n      });\n      let university = new University();\n        university.universityName = form.value.universityName ;\n        debugger\n      this.http.post<any>\n        ('https://localhost:7115/api/University/CreateNewUniversity',\n        university ,{headers:headers}).subscribe(data => {\n          console.log(data)\n\n          //!==\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: 'University created Successfully',\n          showConfirmButton: false,\n          timer: 1500\n        });\n      //!==\n      })\n\n\n    }\n    else{\n      this.universityInput.id=this.UniversityId.toString();\n      this.universityServices.UpdateUniversity(this.universityInput)\n          .subscribe((UpUniversity)=>{\n          this.universityUpdated.emit(UpUniversity);\n      }, )\n\n      //!==\n      Swal.fire({\n        position: 'top-end',\n        icon: 'success',\n        title: 'University Updated Successfully',\n        showConfirmButton: false,\n        timer: 1500\n      });\n    //!==\n    }\n        form.reset(this.universityInput);\n  }\n\n  _GetAllUniversityData():Observable<any>{\n    let url =\"https://localhost:7115/api/University/GetUniversity\";\n    return this.http.get<any>(url);\n  }\n\n  // GetAllUniversityData(){\n  //   this._GetAllUniversityData().subscribe((result : any)=> {\n\n  //     this.interviewers=result.interviewers;\n  //     this.students=result.students;\n  //     this.rounds=result.rounds;\n  //     debugger\n  //   });\n\n\n\n}\n","\n<div class=\"container-fluid\">\n\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <div class=\"card\">\n        <form class=\"card-body\" #universityForm=\"ngForm\"  (ngSubmit)=\"onSubmit(universityForm)\">\n          <h4 class=\"card-title mb-4\">Create New University</h4>\n\n            <div class=\"row mb-4\">\n              <label for=\"universityName\" class=\"col-form-label col-lg-2\" >Name</label>\n                <div class=\"col-lg-10\">\n                <input id=\"universityName\"\n                name=\"universityName\" type=\"text\" class=\"form-control\"\n                  placeholder=\"Enter University Name...\" [disabled]=\"IsInterviewer\"\n                  [(ngModel)]=\"universityInput.universityName\">\n              </div>\n            </div>\n            <div class=\"col-lg-10\" >\n              <button\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              >{{ isAddMode ? \"Create University\" : \"Edit University\" }}</button>\n            </div>\n\n        </form>\n      </div>\n    </div>\n  </div>\n\n<!-- </ng-template> -->\n\n<!-- end row -->\n\n<!-- container-fluid -->\n\n\n\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { Student } from '../../student/student.model';\nimport { University } from '../university.model';\n\n@Component({\n  selector: 'app-university-list',\n  templateUrl: './university-list.component.html',\n  styleUrls: ['./university-list.component.scss']\n})\nexport class UniversityListComponent implements OnInit {\n\n  IsAdmin !:boolean;\n  IsInterviewer !:boolean;\n  IsUser !:boolean;\n  LoggedIn : boolean = false;\n\n  selectUniversities : University[];\n  searchText :any;\n\n  @Input() university :University;\n  @Output() universityUpdated =new EventEmitter<University>();\n  constructor(private http : HttpClient,\n    public formBuilder : FormBuilder) { }\n\n  ngOnInit(): void {\n\n    const role :any =localStorage.getItem('roles');\n    if(role== \"Admin\"){\n       this.IsAdmin =true;\n       this.IsInterviewer=false;\n       this.IsUser=false;\n       this.LoggedIn=true;\n    }else if (role==\"Interviewer\"){\n      this.IsInterviewer= true;\n      this.IsAdmin = false;\n      this.IsUser=false;\n      this.LoggedIn=true;\n    }\n    else if(role == \"Trainee\"){\n      this.IsUser=true;\n      this.IsInterviewer=false;\n      this.IsAdmin=false;\n      this.LoggedIn=true;\n    }\n    this.getUniversities();\n\n  }\n  students :Student[];\n  getUniversities(){\n    const headers = new HttpHeaders({\n      Authorization :`Bearer ${localStorage.getItem('jwt')}`,\n    });\n    return this.http.get<any>('https://localhost:7115/api/University/GetUniversity'\n    ,{\n      headers:headers\n    })\n    .subscribe(data =>{\n      this.selectUniversities = data;\n\n      console.log(this.selectUniversities);\n    })\n  }\n\n  universityId:number =0;\n  universityName:string =\"\";\n\n  adminId:number;\n\n\n\n  public deleteUniversity(universityId:number){\n    const headers = new HttpHeaders({\n      Authorization :`Bearer ${localStorage.getItem('jwt')}`,\n    });\n    let url =\"https://localhost:7115/api/University/DeleteUniversity\";\n    if(universityId !=0)\n      url +=`?id=${universityId}`\n\n      return this.http.delete<University>(url,{headers:headers});\n\n  }\n\n  onDeleteUniversity(universityId:number) {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger ms-2'\n      },\n      buttonsStyling: false\n    });\n\n    swalWithBootstrapButtons\n      .fire({\n        title: 'Are you sure?',\n        text: 'You wont be able to revert this!',\n        icon: 'question',\n        confirmButtonText: 'Yes, delete it!',\n        cancelButtonText: 'No, cancel!',\n        showCancelButton: true\n      })\n      .then(result => {\n        if (result.value) {\n          //!main code for delete\n          this.deleteUniversity(universityId)\n            .subscribe((_university)=> {\n              this.universityUpdated.emit(_university);\n              this.getUniversities()\n            });\n            //!===============\n          swalWithBootstrapButtons.fire(\n            'Deleted!',\n            'University has been deleted.',\n            'success'\n          );\n        } else if (\n          /* Read more about handling dismissals below */\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelled',\n            'University is safe :)',\n            'error'\n          );\n        }\n      }\n      );\n  }\n\n\n  filteration: any | undefined = {} ;\n\n\n\n\n\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class>\n      <a\n      class=\"btn btn-outline-primary mb-3\"\n      [routerLink]=\"['/university/createUniversity']\"\n      routerLinkActive=\"active\"\n      *ngIf=\"!IsUser && !IsInterviewer && LoggedIn\">\n        Create University\n      </a>\n\n      <div class=\"table-responsive\">\n        <table class=\"table project-list-table table-nowrap align-middle table-borderless\">\n          <thead>\n            <tr>\n              <!-- <th scope=\"col\" style=\"width: 100px\">Interview</th> -->\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">University</th>\n              <!-- <th scope=\"col\">Student</th> -->\n              <th scope=\"col\" *ngIf=\"!IsUser && !IsInterviewer && LoggedIn\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <!--  | search:searchText -->\n              <tr *ngFor=\"let university of selectUniversities ; let i=index\" >\n\n                <td>{{i+1}}</td>\n              <td>\n                <a\n                routerLinkActive=\"active\" >\n                  {{university.universityName}}\n                </a>\n\n              </td>\n\n\n\n\n\n\n              <td *ngIf=\"!IsUser && !IsInterviewer && LoggedIn\">\n                    <a *ngIf=\"!IsUser\"\n                    [routerLink]=\"['/university/edit',university.id]\"\n                    routerLinkActive=\"active\" style=\"margin-left:2% ;\"\n                    ><i class=\"fa fa-marker text-success\"></i> Edit</a>\n\n                    <a *ngIf=\"!IsUser && !IsInterviewer && LoggedIn\"\n                    type=\"button\"\n                    style=\"cursor: pointer;\" style=\"margin-right:2% ;\"\n                    (click) =onDeleteUniversity(university.id)>\n                    <i class=\"fa fa-trash text-danger\"></i> Delete</a>\n\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <!-- <app-pagination\n          [total-items]=\"Counter\"\n          [page-size]=\"_pageSize\"\n          (page-changed)=\"onPageChange($event)\"\n        ></app-pagination> -->\n\n      </div>\n\n\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UniversityCreateComponent } from './university-create/university-create.component';\nimport { UniversityListComponent } from './university-list/university-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '../ui/ui.module';\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\n\n\nconst routes:Routes =[\n  {path:'createUniversity', component:UniversityCreateComponent},\n  {path:'listUniversity', component:UniversityListComponent},\n{path:'edit/:id',component:UniversityCreateComponent}\n\n  ]\n\n@NgModule({\n  declarations: [\n\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n  ],\n  exports: [RouterModule]\n})\nexport class UniversityRoutingModule { }\n","export class University\r\n{\r\n  id ?:string =\"978E222B-0B74-4056-8B75-C5F5AD986C4A\";\r\n  universityName ?: string;\r\n\r\n  adminId:string=\"3fa85f64-5717-4562-b3fc-2c963f66afa6\";\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UniversityCreateComponent } from './university-create/university-create.component';\nimport { UniversityListComponent } from './university-list/university-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '../ui/ui.module';\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\nimport { UniversityRoutingModule } from './university-routing.module';\n\n\n\n\n@NgModule({\n  declarations: [\n    UniversityCreateComponent,\n    UniversityListComponent\n  ],\n  imports: [\n    CommonModule,\n    UniversityRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    UiModule,\n    DropzoneModule\n  ]\n})\nexport class UniversityModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { University } from './university.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniversityService {\n  University =[];\n  constructor(private http :HttpClient) { }\n\n  public createUniversity (university :University): Observable<University []> {\n    const headers = new HttpHeaders({\n      Authorization :`Bearer ${localStorage.getItem('jwt')}`,\n    });\n    university.id  ;\n    return this.http.post<University[]>\n        ('https://localhost:7115/api/University/CreateNewUniversity',university,{headers:headers});\n\n  }\n\n  public getUniversityById(id:number) : Observable <any>{\n    let url=\"https://localhost:7115/api/University/GetUniversityById\";\n    if (id!=0)\n      url += `?id=${id}`\n\n    return this.http.get<University>(\n      url\n    );\n  }\n\n  public UpdateUniversity(university: University): Observable<University[]> {\n    const headers = new HttpHeaders({\n      Authorization :`Bearer ${localStorage.getItem('jwt')}`,\n    });\n    return this.http.put<University[]>(\n      \"https://localhost:7115/api/University/EditUniversity\",\n      university ,{headers:headers}\n    );\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}