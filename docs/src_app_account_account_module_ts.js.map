{"version":3,"file":"src_app_account_account_module_ts.js","mappings":"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","sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/auth/auth-routing.ts","./src/app/account/auth/auth.module.ts","./src/app/account/auth/login/login.component.ts","./src/app/account/auth/login/login.component.html","./src/app/account/auth/passwordreset/passwordreset.component.ts","./src/app/account/auth/passwordreset/passwordreset.component.html","./src/app/account/auth/recoverpwd2/recoverpwd2.component.ts","./src/app/account/auth/recoverpwd2/recoverpwd2.component.html","./src/app/account/auth/register2/register2.component.ts","./src/app/account/auth/register2/register2.component.html","./src/app/account/auth/signup/signup.component.ts","./src/app/account/auth/signup/signup.component.html","./src/app/core/services/user.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { AuthModule } from './auth/auth.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    AuthModule\n  ]\n})\nexport class AccountModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\n\nimport { SignupComponent } from './signup/signup.component';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\nimport { Register2Component } from './register2/register2.component';\nimport { Recoverpwd2Component } from './recoverpwd2/recoverpwd2.component';\n\nconst routes: Routes = [\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'signup',\n        component: SignupComponent\n    },\n    {\n        path: 'signup-2',\n        component: Register2Component\n    },\n    {\n        path: 'reset-password',\n        component: PasswordresetComponent\n    },\n    {\n        path: 'recoverpwd-2',\n        component: Recoverpwd2Component\n    },\n    {\n        path: 'login-2',\n        component: Login2Component\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CarouselModule } from 'ngx-owl-carousel-o';\n\nimport { UIModule } from '../../shared/ui/ui.module';\nimport { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { Register2Component } from './register2/register2.component';\nimport { Recoverpwd2Component } from './recoverpwd2/recoverpwd2.component';\n\nimport { AuthRoutingModule } from './auth-routing';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\n\n@NgModule({\n  declarations: [LoginComponent, Login2Component, SignupComponent, PasswordresetComponent, Register2Component, Recoverpwd2Component],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbAlertModule,\n    UIModule,\n    AuthRoutingModule,\n    CarouselModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { AuthfakeauthenticationService } from '../../../core/services/authfake.service';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\n/**\n * Login component\n */\nexport class LoginComponent implements OnInit {\n\n  loginForm: UntypedFormGroup;\n  submitted = false;\n  error = '';\n  returnUrl: string;\n  invalidLogin !: boolean;\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: UntypedFormBuilder,\n     private route: ActivatedRoute, private router: Router,\n     private http : HttpClient,\n     private authenticationService: AuthenticationService,\n    private authFackservice: AuthfakeauthenticationService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['A****@gmail.com', [Validators.required, Validators.email]],\n      password: ['*@_+.Ak,d***', [Validators.required]],\n    });\n\n    // reset login status\n    // this.authenticationService.logout();\n    // get return url from route parameters or default to '/'\n    // tslint:disable-next-line: no-string-literal\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  /**\n   * Form submit\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n    return;\n\n    } else {\n      const body = {\n        Email :this.loginForm.controls['email'].value,\n        Password:this.loginForm.controls['password'].value,\n      };\n      this.http.post('https://localhost:7115/api/Auth/Login',body)\n        .subscribe((response:any)=>{\n          const token =(<any>response).tokens;\n          localStorage.setItem('jwt',token);\n\n          const role = response.roles;\n          localStorage.setItem('roles',role);\n\n          console.log(token);\n          this.invalidLogin=false;\n\n          this.router.navigate(['/dashboard']);\n          // console.log('response',response);\n          debugger\n        })\n\n    }\n  }\n  //  if (environment.defaultauth === 'firebase') {\n  //       this.authenticationService.login(this.f.email.value, this.f.password.value).then((res: any) => {\n  //         this.router.navigate(['/dashboard']);\n  //       })\n  //         .catch(error => {\n  //           this.error = error ? error : '';\n  //         });\n  //     } else {\n  //       this.authFackservice.login(this.f.email.value, this.f.password.value)\n  //         .pipe(first())\n  //         .subscribe(\n  //           data => {\n  //             this.router.navigate(['/dashboard']);\n  //           },\n  //           error => {\n  //             this.error = error ? error : '';\n  //           });\n  //     }\n  //   }\n  // }\n}\n","<!-- <div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <div class=\"card mb-3\" style=\"width: 100%;\">\n                  <div class=\"card-body\">\n                    <div class=\"text-primary p-4\">\n                      <h5 class=\"text-primary text-center\" style=\"font-size:30px; color:rgb(149, 221, 24)\">Welcome Back !</h5>\n                      <p  style=\"font-size:20px; text-align: center;\"><strong>Sign in to continue to KAITECH.</strong></p>\n                    </div>\n\n                  </div>\n              </div>\n              <div class=\"col-6 align-self-end\">\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\" style=\"height:max-content \">\n              </div>\n\n              </div>\n            </div>\n\n\n            <div class=\" row \">\n             <div class=\"col-12\">\n               <div class=\"card mb-3\" style=\"width: 100%;\">\n          <div class=\"row g-0\">\n            <div class=\"card-body pt-10\">\n              <div>\n                <a routerLink=\"/\">\n                  <div class=\"avatar-md profile-user-wid mt-4\">\n                    <span class=\"avatar-title rounded-circle bg-light\">\n                      <img src=\"assets/images/KAITECH.png\" alt=\"\" class=\"rounded-circle\" height=\"80\">\n                    </span>\n                  </div>\n                </a>\n              </div>\n              <div class=\"p-2\">\n                <form class=\"form-horizontal\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\"\n                >\n\n          <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n          <div class=\"mb-3\">\n            <label for=\"email\">Email</label>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.email.errors.required\">Email is required</div>\n              <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n            </div>\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"password\">Password</label>\n            <div class=\"input-group auth-pass-inputgroup\">\n              <input type=\"password\" class=\"form-control\" formControlName=\"password\" placeholder=\"Enter password\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" aria-label=\"Password\"\n                aria-describedby=\"password-addon\">\n\n              <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\"><i\n                  class=\"mdi mdi-eye-outline\"></i></button>\n              <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                <span *ngIf=\"f.password.errors.required\">Password is required</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"remember-check\">\n            <label class=\"form-check-label\" for=\"remember-check\">\n                Remember me\n            </label>\n        </div>\n\n          <div class=\"mt-3 d-grid\">\n            <button class=\"btn btn-primary\" type=\"submit\">Log In</button>\n          </div>\n          <div class=\"mt-4 text-center\">\n            <h5 class=\"font-size-14 mb-3\">Sign in with</h5>\n\n            <ul class=\"list-inline\">\n              <li class=\"list-inline-item\">\n                <a href=\"javascript::void()\" class=\"social-list-item bg-primary text-white border-primary\">\n                  <i class=\"mdi mdi-facebook\"></i>\n                </a>\n              </li>\n              <li class=\"list-inline-item\">\n                <a href=\"javascript::void()\" class=\"social-list-item bg-info text-white border-info\">\n                  <i class=\"mdi mdi-twitter\"></i>\n                </a>\n              </li>\n              <li class=\"list-inline-item\">\n                <a href=\"javascript::void()\" class=\"social-list-item bg-danger text-white border-danger\">\n                  <i class=\"mdi mdi-google\"></i>\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div class=\"mt-4 text-center\">\n            <a routerLink=\"/account/reset-password\" class=\"text-muted\"><i class=\"mdi mdi-lock mr-1\"></i> Forgot\n              your\n              password?</a>\n          </div>\n        </form>\n      </div>\n      <div class=\"mt-5 text-center\">\n        <p>Don't have an account ? <a routerLink=\"/account/signup\" class=\"fw-medium text-primary\"> Signup\n            now\n          </a>\n        </p>\n\n      </div>\n\n    </div>\n    </div>\n             </div>\n\n            </div>\n          </div>\n      </div>\n    </div>\n  </div> -->\n\n\n\n  <!-- end container -->\n\n<!-- end page -->\n\n<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card overflow-hidden\">\n          <div class=\"bg-soft bg-primary\">\n            <div class=\"row\">\n              <div class=\"col-7\">\n                <div class=\"text-primary p-4\">\n                  <h5 class=\"text-primary\">Welcome Back !</h5>\n                  <p>Sign in to continue to Skote.</p>\n                </div>\n              </div>\n              <div class=\"col-5 align-self-end\">\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-body pt-0\">\n            <div>\n              <a routerLink=\"/\">\n                <div class=\"avatar-md profile-user-wid mb-4\">\n                  <span class=\"avatar-title rounded-circle bg-light\">\n                    <img src=\"assets/images/logo.svg\" alt=\"\" class=\"rounded-circle\" height=\"34\">\n                  </span>\n                </div>\n              </a>\n            </div>\n            <div class=\"p-2\">\n              <form class=\"form-horizontal\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n                <div class=\"mb-3\">\n                  <label for=\"email\">Email</label>\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                  </div>\n                </div>\n\n                <div class=\"mb-3\">\n                  <label for=\"password\">Password</label>\n                  <div class=\"input-group auth-pass-inputgroup\">\n                    <input type=\"password\" class=\"form-control\" formControlName=\"password\" placeholder=\"Enter password\"\n                      [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" aria-label=\"Password\"\n                      aria-describedby=\"password-addon\">\n\n                    <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\"><i\n                        class=\"mdi mdi-eye-outline\"></i></button>\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                      <span *ngIf=\"f.password.errors.required\">Password is required</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-check\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"remember-check\">\n                  <label class=\"form-check-label\" for=\"remember-check\">\n                      Remember me\n                  </label>\n              </div>\n\n                <div class=\"mt-3 d-grid\">\n                  <button class=\"btn btn-primary\" type=\"submit\">Log In</button>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <h5 class=\"font-size-14 mb-3\">Sign in with</h5>\n\n                  <ul class=\"list-inline\">\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-primary text-white border-primary\">\n                        <i class=\"mdi mdi-facebook\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-info text-white border-info\">\n                        <i class=\"mdi mdi-twitter\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-danger text-white border-danger\">\n                        <i class=\"mdi mdi-google\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <a routerLink=\"/account/reset-password\" class=\"text-muted\"><i class=\"mdi mdi-lock mr-1\"></i> Forgot\n                    your\n                    password?</a>\n                </div>\n              </form>\n            </div>\n\n          </div>\n        </div>\n        <div class=\"mt-5 text-center\">\n          <p>Don't have an account ? <a routerLink=\"/account/signup\" class=\"fw-medium text-primary\"> Signup\n              now\n            </a> </p>\n          <p>© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n</div>\n  <!-- end container -->\n<!-- end page -->\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-passwordreset',\n  templateUrl: './passwordreset.component.html',\n  styleUrls: ['./passwordreset.component.scss']\n})\n\n/**\n * Reset-password component\n */\nexport class PasswordresetComponent implements OnInit, AfterViewInit {\n\n  resetForm: UntypedFormGroup;\n  submitted = false;\n  error = '';\n  success = '';\n  loading = false;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: UntypedFormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  ngAfterViewInit() {\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.resetForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.success = '';\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n    if (environment.defaultauth === 'firebase') {\n      this.authenticationService.resetPassword(this.f.email.value)\n        .catch(error => {\n          this.error = error ? error : '';\n        });\n    }\n  }\n}\n","<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card overflow-hidden\">\n          <div class=\"bg-soft bg-primary\">\n            <div class=\"row\">\n              <div class=\"col-7\">\n                <div class=\"text-primary p-4\">\n                  <h5 class=\"text-primary\"> Reset Password</h5>\n                  <p>Re-Password with Skote.</p>\n                </div>\n              </div>\n              <div class=\"col-5 align-self-end\">\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-body pt-0\">\n            <div>\n              <a routerLink=\"/\">\n                <div class=\"avatar-md profile-user-wid mb-4\">\n                  <span class=\"avatar-title rounded-circle bg-light\">\n                    <img src=\"assets/images/logo.svg\" alt=\"\" class=\"rounded-circle\" height=\"34\">\n                  </span>\n                </div>\n              </a>\n            </div>\n\n            <form class=\"needs-validation\" name=\"resetForm\" [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n\n              <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n              <div class=\"mb-3\">\n                <label for=\"email\">Email</label>\n\n                <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\n\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                  <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                </div>\n              </div>\n              <div class=\"text-end\">\n                <button class=\"btn btn-primary w-md\" type=\"submit\">Reset</button>\n              </div>\n            </form>\n\n          </div> <!-- end card-body-->\n        </div>\n        <!-- end card -->\n        <div class=\"mt-5 text-center\">\n          <p>Remember It ? <a routerLink=\"/account/login\" class=\"fw-medium text-primary\"> Sign In here</a> </p>\n          <p>© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n        </div>\n\n      </div> <!-- end col -->\n    </div>\n    <!-- end row -->\n  </div>\n  <!-- end container -->\n</div>\n<!-- end page -->","import { Component, OnInit } from '@angular/core';\nimport { OwlOptions } from 'ngx-owl-carousel-o';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-recoverpwd2',\n  templateUrl: './recoverpwd2.component.html',\n  styleUrls: ['./recoverpwd2.component.scss']\n})\nexport class Recoverpwd2Component implements OnInit {\n\n   // set the currenr year\n   year: number = new Date().getFullYear();\n\n   resetForm: UntypedFormGroup;\n   submitted = false;\n   error = '';\n   success = '';\n   loading = false;\n\n   constructor(private formBuilder: UntypedFormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.resetForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.success = '';\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n    if (environment.defaultauth === 'firebase') {\n      this.authenticationService.resetPassword(this.f.email.value)\n        .catch(error => {\n          this.error = error ? error : '';\n        });\n    }\n  }\n\n  carouselOption: OwlOptions = {\n    items: 1,\n    loop: false,\n    margin: 0,\n    nav: false,\n    dots: true,\n    responsive: {\n      680: {\n        items: 1\n      },\n    }\n  }\n}\n","<div>\n    <div class=\"container-fluid p-0\">\n        <div class=\"row g-0\">\n\n            <div class=\"col-xl-9\">\n                <div class=\"auth-full-bg pt-lg-5 p-4\">\n                    <div class=\"w-100\">\n                        <div class=\"bg-overlay\"></div>\n                        <div class=\"d-flex h-100 flex-column\">\n                            <div class=\"p-4 mt-auto\">\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-lg-7\">\n                                        <div class=\"text-center\">\n\n                                            <h4 class=\"mb-3\"><i\n                                                    class=\"bx bxs-quote-alt-left text-primary h1 align-middle me-3\"></i><span\n                                                    class=\"text-primary\">5k</span>+ Satisfied clients</h4>\n\n                                            <div dir=\"ltr\">\n                                                <owl-carousel-o class=\"owl-theme auth-review-carousel\"\n                                                    [options]=\"carouselOption\">\n                                                    <ng-template carouselSlide>\n                                                        <div class=\"item\">\n                                                            <div class=\"py-3\">\n                                                                <p class=\"font-size-16 mb-4\">\" Fantastic theme with a\n                                                                    ton of\n                                                                    options. If you just want the HTML to integrate with\n                                                                    your project, then this is the package. You can find\n                                                                    the\n                                                                    files in the 'dist' folder...no need to install git\n                                                                    and\n                                                                    all the other stuff the documentation talks about. \"\n                                                                </p>\n\n                                                                <div>\n                                                                    <h4 class=\"font-size-16 text-primary\">Abs1981</h4>\n                                                                    <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                    </ng-template>\n                                                    <ng-template carouselSlide>\n                                                        <div class=\"item\">\n                                                            <div class=\"py-3\">\n                                                                <p class=\"font-size-16 mb-4\">\" If Every Vendor on Envato\n                                                                    are\n                                                                    as supportive as Themesbrand, Development with be a\n                                                                    nice\n                                                                    experience. You guys are Wonderful. Keep us the good\n                                                                    work. \"</p>\n\n                                                                <div>\n                                                                    <h4 class=\"font-size-16 text-primary\">nezerious</h4>\n                                                                    <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                    </ng-template>\n                                                </owl-carousel-o>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- end col -->\n\n            <div class=\"col-xl-3\">\n                <div class=\"auth-full-page-content p-md-5 p-4\">\n                    <div class=\"w-100\">\n\n                        <div class=\"d-flex flex-column h-100\">\n                            <div class=\"mb-4 mb-md-5\">\n                                <a routerLink=\"/\" class=\"d-block auth-logo\">\n                                    <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"18\" class=\"auth-logo-dark\">\n                                    <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"18\" class=\"auth-logo-light\">\n                                </a>\n                            </div>\n                            <div class=\"my-auto\">\n                                <div>\n                                    <h5 class=\"text-primary\"> Reset Password</h5>\n                                    <p class=\"text-muted\">Re-Password with Skote.</p>\n                                </div>\n\n                                <div class=\"mt-4\">\n                                    <div class=\"alert alert-success text-center mb-4\" role=\"alert\">\n                                        Enter your Email and instructions will be sent to you!\n                                    </div>\n                                    <form [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\"\n                                    >\n                                    <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n                                        <div class=\"mb-3\">\n                                            <label for=\"useremail\">Email</label>\n                                            <input type=\"email\" formControlName=\"email\" \n                                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" class=\"form-control\" id=\"useremail\"\n                                                placeholder=\"Enter email\">\n                                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                                  </div>\n                                        </div>\n\n                                        <div class=\"text-end\">\n                                                <button class=\"btn btn-primary w-md\"\n                                                    type=\"submit\">Reset</button>\n                                            </div>\n\n                                    </form>\n                                    <div class=\"mt-5 text-center\">\n                                        <p>Remember It ? <a routerLink=\"/account/login-2\"\n                                                class=\"fw-medium text-primary\"> Sign In here</a> </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"mt-4 mt-md-5 text-center\">\n                                <p class=\"mb-0\">©{{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i>\n                                    by Themesbrand</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- end col -->\n        </div>\n        <!-- end row -->\n    </div>\n    <!-- end container-fluid -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { OwlOptions } from 'ngx-owl-carousel-o';\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\nimport { first } from 'rxjs/operators';\nimport { UserProfileService } from '../../../core/services/user.service';\n\n@Component({\n  selector: 'app-register2',\n  templateUrl: './register2.component.html',\n  styleUrls: ['./register2.component.scss']\n})\nexport class Register2Component implements OnInit {\n\n  signupForm: UntypedFormGroup;\n  submitted = false;\n  error = '';\n  successmsg = false;\n\n  constructor(private formBuilder: UntypedFormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService,\n    private userService: UserProfileService) { }\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  ngOnInit(): void {\n    document.body.classList.add('auth-body-bg')\n\n    this.signupForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  carouselOption: OwlOptions = {\n    items: 1,\n    loop: false,\n    margin: 0,\n    nav: false,\n    dots: true,\n    responsive: {\n      680: {\n        items: 1\n      },\n    }\n  }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.successmsg = true;\n          if (this.successmsg) {\n            this.router.navigate(['/dashboard']);\n          }\n        })\n          .catch(error => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.userService.register(this.signupForm.value)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.successmsg = true;\n              if (this.successmsg) {\n                this.router.navigate(['/account/login']);\n              }\n            },\n            error => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n}\n","<div class=\"container-fluid p-0\">\n    <div class=\"row g-0\">\n\n        <div class=\"col-xl-9\">\n            <div class=\"auth-full-bg pt-lg-5 p-4\">\n                <div class=\"w-100\">\n                    <div class=\"bg-overlay\"></div>\n                    <div class=\"d-flex h-100 flex-column\">\n\n                        <div class=\"p-4 mt-auto\">\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-lg-7\">\n                                    <div class=\"text-center\">\n\n                                        <h4 class=\"mb-3\"><i\n                                                class=\"bx bxs-quote-alt-left text-primary h1 align-middle me-3\"></i><span\n                                                class=\"text-primary\">5k</span>+ Satisfied clients</h4>\n\n                                        <div dir=\"ltr\">\n                                            <owl-carousel-o class=\"owl-theme auth-review-carousel\"\n                                                [options]=\"carouselOption\">\n                                                <ng-template carouselSlide>\n                                                    <div class=\"item\">\n                                                        <div class=\"py-3\">\n                                                            <p class=\"font-size-16 mb-4\">\" Fantastic theme with a\n                                                                ton of\n                                                                options. If you just want the HTML to integrate with\n                                                                your project, then this is the package. You can find\n                                                                the\n                                                                files in the 'dist' folder...no need to install git\n                                                                and\n                                                                all the other stuff the documentation talks about. \"\n                                                            </p>\n\n                                                            <div>\n                                                                <h4 class=\"font-size-16 text-primary\">Abs1981</h4>\n                                                                <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                </ng-template>\n                                                <ng-template carouselSlide>\n                                                    <div class=\"item\">\n                                                        <div class=\"py-3\">\n                                                            <p class=\"font-size-16 mb-4\">\" If Every Vendor on Envato\n                                                                are\n                                                                as supportive as Themesbrand, Development with be a\n                                                                nice\n                                                                experience. You guys are Wonderful. Keep us the good\n                                                                work. \"</p>\n\n                                                            <div>\n                                                                <h4 class=\"font-size-16 text-primary\">nezerious</h4>\n                                                                <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                </ng-template>\n                                            </owl-carousel-o>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- end col -->\n\n        <div class=\"col-xl-3\">\n            <div class=\"auth-full-page-content p-md-5 p-4\">\n                <div class=\"w-100\">\n\n                    <div class=\"d-flex flex-column h-100\">\n                        <div class=\"mb-4 mb-md-5\">\n                            <a routerLink=\"/\" class=\"d-block auth-logo\">\n                                <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"18\" class=\"auth-logo-dark\">\n                                <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"18\" class=\"auth-logo-light\">\n                            </a>\n                        </div>\n                        <div class=\"my-auto\">\n                            <div>\n                                <h5 class=\"text-primary\">Register account</h5>\n                                <p class=\"text-muted\">Get your free Skote account now.</p>\n                            </div>\n                            <div class=\"mt-4\">\n                                <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n                                    <ngb-alert type=\"success\" *ngIf=\"successmsg\" [dismissible]=\"false\">Registeration\n                                        successfull.\n                                    </ngb-alert>\n\n                                    <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n                                    <div class=\"mb-3\">\n                                        <label for=\"username\">Username</label>\n                                        <input type=\"text\" formControlName=\"username\" class=\"form-control\" id=\"username\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\n                                            placeholder=\"Enter username\">\n                                        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.username.errors.required\">Userame is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-3\">\n                                        <label for=\"useremail\">Email</label>\n                                        <input type=\"email\" formControlName=\"email\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n                                            class=\"form-control\" id=\"useremail\" placeholder=\"Enter email\">\n                                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-3\">\n                                        <label for=\"userpassword\">Password</label>\n                                        <input type=\"password\" formControlName=\"password\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n                                            class=\"form-control\" id=\"userpassword\" placeholder=\"Enter password\">\n                                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div>\n                                        <p class=\"mb-0\">By registering you agree to the Skote <a\n                                                href=\"javascript: void(0);\" class=\"text-primary\">Terms of Use</a>\n                                        </p>\n                                    </div>\n\n                                    <div class=\"mt-4 d-grid\">\n                                        <button class=\"btn btn-primary btn-block\" type=\"submit\">Register</button>\n                                    </div>\n\n                                    <div class=\"mt-4 text-center\">\n                                        <h5 class=\"font-size-14 mb-3\">Sign up using</h5>\n                                        <ul class=\"list-inline\">\n                                            <li class=\"list-inline-item\">\n                                                <a href=\"javascript::void()\"\n                                                    class=\"social-list-item bg-primary text-white border-primary\">\n                                                    <i class=\"mdi mdi-facebook\"></i>\n                                                </a>\n                                            </li>\n                                            <li class=\"list-inline-item\">\n                                                <a href=\"javascript::void()\"\n                                                    class=\"social-list-item bg-info text-white border-info\">\n                                                    <i class=\"mdi mdi-twitter\"></i>\n                                                </a>\n                                            </li>\n                                            <li class=\"list-inline-item\">\n                                                <a href=\"javascript::void()\"\n                                                    class=\"social-list-item bg-danger text-white border-danger\">\n                                                    <i class=\"mdi mdi-google\"></i>\n                                                </a>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </form>\n\n                                <div class=\"mt-5 text-center\">\n                                    <p>Already have an account ? <a routerLink=\"/account/login-2\"\n                                            class=\"fw-medium text-primary\"> Login</a> </p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"mt-4 mt-md-5 text-center\">\n                            <p class=\"mb-0\">© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i>\n                                by Themesbrand</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- end col -->\n    </div>\n    <!-- end row -->\n</div>\n<!-- end container-fluid -->","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\nimport { first } from 'rxjs/operators';\nimport { UserProfileService } from '../../../core/services/user.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm: UntypedFormGroup;\n  submitted = false;\n  error = '';\n  successmsg = false;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: UntypedFormBuilder,\n     private route: ActivatedRoute,\n      private router: Router,\n      private http : HttpClient,\n       private authenticationService: AuthenticationService,\n    private userService: UserProfileService) { }\n\n  ngOnInit() {\n    this.signupForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n\n\n    this.submitted = true;\n    debugger\n    const body={\n      UserName:this.signupForm.controls['username'].value,\n      Email:this.signupForm.controls['email'].value,\n      Password:this.signupForm.controls['password'].value,\n    }\n    debugger\n    this.http.post<any>('https://localhost:7115/api/Auth/Register',body)\n    .subscribe((data)=>{\n      console.log(\"response\",data);\n      localStorage.setItem('jwt', data.tokens);\n      localStorage.setItem('roles',data.roles);\n      this.router.navigate(['/student/createStudent']);\n\n      debugger\n    })\n\n  }\n}\n","<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card overflow-hidden\">\n          <div class=\"bg-soft bg-primary\">\n            <div class=\"row\">\n              <div class=\"col-7\">\n                <div class=\"text-primary p-4\">\n                  <h5 class=\"text-primary\">Free Register</h5>\n                  <p>Get your free Skote account now.</p>\n                </div>\n              </div>\n              <div class=\"col-5 align-self-end\">\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-body pt-0\">\n            <div>\n              <a routerLink=\"/\">\n                <div class=\"avatar-md profile-user-wid mb-4\">\n                  <span class=\"avatar-title rounded-circle bg-light\">\n                    <img src=\"assets/images/logo.svg\" alt=\"\" class=\"rounded-circle\" height=\"34\">\n                  </span>\n                </div>\n              </a>\n            </div>\n            <div class=\"p-2\">\n\n              <form class=\"needs-validation\" name=\"signupForm\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\"\n                novalidate>\n\n                <!-- <ngb-alert type=\"success\" *ngIf=\"successmsg\" [dismissible]=\"false\">Registeration successfull.\n                </ngb-alert>\n\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert> -->\n\n                <div class=\"mb-3\">\n                  <label for=\"username\" class=\"form-label\">Username</label>\n\n                  <input type=\"text\" formControlName=\"username\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" id=\"username\"\n                    placeholder=\"Enter username\" />\n\n                  <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Userame is required</div>\n                  </div>\n                </div>\n\n                <div class=\"mb-3\">\n                  <label for=\"email\" class=\"form-label\">Email</label>\n\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\n\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                  </div>\n                </div>\n\n                <div class=\"mb-3\">\n                  <label for=\"password\" class=\"form-label\">Password</label>\n\n                  <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" id=\"password\" placeholder=\"Password\" />\n\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                  </div>\n                </div>\n\n                <div class=\"mt-4 d-grid\">\n                  <button class=\"btn btn-primary\" type=\"submit\" >Register</button>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <h5 class=\"font-size-14 mb-3\">Sign in with</h5>\n\n                  <ul class=\"list-inline\">\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-primary text-white border-primary\">\n                        <i class=\"mdi mdi-facebook\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-info text-white border-info\">\n                        <i class=\"mdi mdi-twitter\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-danger text-white border-danger\">\n                        <i class=\"mdi mdi-google\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <p class=\"mb-0\">By registering you agree to the Skote <a href=\"javascript: void(0);\"\n                      class=\"text-primary\">Terms of\n                      Use</a></p>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        <!-- end card -->\n\n        <div class=\"mt-5 text-center\">\n          <p>Already have an account ? <a routerLink=\"/account/login\" class=\"fw-medium text-primary\"> Login</a>\n          </p>\n          <p>© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n        </div>\n      </div> <!-- end col -->\n    </div>\n    <!-- end row -->\n  </div>\n  <!-- end container -->\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { User } from '../models/auth.models';\n\n@Injectable({ providedIn: 'root' })\nexport class UserProfileService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<User[]>(`/api/login`);\n    }\n\n    register(user: User) {\n        return this.http.post(`/users/register`, user);\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}